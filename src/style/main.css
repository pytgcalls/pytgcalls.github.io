@import url("content.css");
@import url("header.css");
@import url("home.css");
@import url("leftsidebar.css");
@import url("sections.css");
@import url("splash.css");

html {
  height: 100%;
}

body {
  background: #050505;
  font-family: 'Poppins', sans-serif;
  overflow: hidden;
  height: 100%;
  width: 100%;
  box-sizing: border-box;
  margin: 0;
  overscroll-behavior: none;
  user-select: none;
  -ms-user-select: none;
  -moz-user-select: none;
  -webkit-user-select: none;
  -webkit-tap-highlight-color: transparent;
}

body .shadow-element {
  height: 0px;
  width: 0px;
  box-shadow: 0px 0px 400px 60px var(--color);
  position: fixed;
  top: var(--x);
  left: var(--y);
  z-index: -1;
  transform: scale(0);
  opacity: 0;
  animation: 3s moveShadow forwards linear;
}

body.disable-blur .shadow-element {
  display: none;
}

@keyframes moveShadow {
  from {
    opacity: 0;
    transform: scale(0);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@media screen and (max-width: 1330px) {
  body .shadow-element {
    box-shadow: 0px 0px 400px 50px var(--color);
  }
}

body .page-container {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: calc(100% - 61px);
  overflow: hidden;
  position: absolute;
  animation: 0.4s appearPageContainer;
}

@keyframes appearPageContainer {
  from {
    opacity: 0;
  }
}

::-webkit-scrollbar {
	width: 5px;
}

::-webkit-scrollbar-track {
	background: transparent;
}

::-webkit-scrollbar-thumb {
	background: transparent;
	transition: 0.4s background;
}

:root:hover ::-webkit-scrollbar-thumb {
	background: #666666a1;
	border-radius: 10px;
}

input:focus, textarea:focus {
  outline: none;
  border: none;
}

body .tooltip {
  position: fixed;
  top: calc(var(--center-y) + 49px);
  left: var(--center-x);
  color: black;
  background: linear-gradient(45deg, #685eab, #3d49d3);
  padding: 15px;
  max-width: min(360px, 80vw);
  box-sizing: border-box;
  border-radius: 10px;
  border: 1px solid #000000;
  box-shadow: 0px 0px 17px 5px black;
  opacity: 0;
  z-index: 4;
}

body .tooltip.visible {
  opacity: 1;
  animation: 0.8s appearTooltip cubic-bezier(0.42, 0, 0, 0.98);
}

body .tooltip .title-element {
  font-size: 24px;
  font-weight: 600;
  color: #FFFFFF;
  margin-bottom: 7px;
}

body .tooltip .text-element {
  color: rgba(255, 255, 255, 0.8);
  font-weight: 500;
}

@media screen and (max-width: 500px) {
  body .tooltip .title-element {
    font-size: 20px;
  }

  body .tooltip .text-element {
    font-size: 14px;
  }
}

body .tooltip.has-tabs {
  width: auto;
  padding: 8px;
  background: black;
}

body .tooltip.remove {
  animation: 0.4s removeTooltip cubic-bezier(0.42, 0, 0, 0.98) forwards;
}

@keyframes appearTooltip {
  from {
    opacity: 0;
    transform: translateY(-50%) scale(0.4);
  }
}

@keyframes removeTooltip {
  to {
    opacity: 0;
    transform: translateY(-50%) scale(0.4);
  }
}

body .tooltip .triangle {
  position: absolute;
  left: 50%;
  width: 10px;
  height: 10px;
  background: #4c50c5;
  top: -5px;
  border-top-left-radius: 3px;
  transform: translateX(-50%) rotate(45deg);
}

body .tooltip.has-tabs .triangle {
  background: #000000;
}

body .fs-code-preview {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.8);
  display: flex;
  justify-content: center;
  flex-direction: column;
  gap: 10px;
  padding: 30px;
  box-sizing: border-box;
}

body .fs-code-preview:not(.disappear) {
  animation: 0.4s appearFsCodePreview cubic-bezier(1, 0.05, 0, 0.93);
}

@keyframes appearFsCodePreview {
  from {
    background: transparent;
  }
}

body .fs-code-preview.disappear {
  animation: 0.4s disappearFsCodePreview forwards;
}

@keyframes disappearFsCodePreview {
  to {
    background: transparent;
  }
}

body .fs-code-preview .close-button {
  height: 47px;
  width: 45px;
  position: relative;
  cursor: pointer;
}

body .fs-code-preview:not(.disappear) .close-button {
  animation: 0.4s appearCloseButton cubic-bezier(1, 0.05, 0, 0.93);
}

@keyframes appearCloseButton {
  from {
    transform: translateY(-100%);
    opacity: 0;
  }
}

body .fs-code-preview.disappear .close-button {
  animation: 0.4s disappearCloseButton forwards;
}

@keyframes disappearCloseButton {
  to {
    transform: translateY(-100%);
    opacity: 0;
  }
}

body .fs-code-preview .close-button div {
  height: 5px;
  width: 50px;
  background: white;
  border-radius: 10px;
}

body .fs-code-preview .close-button div:first-child {
  transform: rotate(45deg) translateY(16px) translateX(12px);
}

body .fs-code-preview .close-button div:nth-child(2) {
  transform: rotate(-45deg) translateY(8px) translateX(-12px);
}

body .fs-code-preview .code-preview {
  border: 1px solid rgba(255, 255, 255, 0.16);
  box-shadow: 0px 0px 16px 7px #000000;
  flex: 1;
  background: #1e1e1e;
  border-radius: 10px;
  padding: 10px;
  box-sizing: border-box;
  overflow-y: auto;
  color: #FFFFFF;
}

@supports (overflow-y: overlay) {
  body .fs-code-preview .code-preview {
    overflow-y: overlay;
  }
}

body .fs-code-preview:not(.disappear) .code-preview {
  animation: 0.4s appearCodePreview cubic-bezier(1, 0.05, 0, 0.93);
}

@keyframes appearCodePreview {
  from {
    transform: translateY(100%);
    opacity: 0;
  }
}

body .fs-code-preview.disappear .code-preview {
  animation: 0.4s disappearCodePreview forwards;
}

@keyframes disappearCodePreview {
  to {
    transform: translateY(100%);
    opacity: 0;
  }
}

body .fs-code-preview .code-preview:not(.is-loading) .spacer {
  display: inline-block;
  width: 0px;
  animation: 0.4s updateSpacer 0.1s forwards;
}

@keyframes updateSpacer {
  to {
    width: calc(10px * var(--id));
  }
}

body .fs-code-preview .code-preview.is-loading {
  display: flex;
  align-items: center;
  justify-content: center;
  color: #FFFFFF;
}

body .fs-code-preview .code-preview.is-loading svg {
  animation: 0.9s rotateSvg linear infinite;
}

body .fs-code-preview .code-preview.is-loading svg circle {
  fill: none;
  stroke: #FFFFFF;
  stroke-width: 4px;
  stroke-linecap: round;
  stroke-dasharray: 10, 10;
  animation: 1.5s animateStroke linear infinite;
}