body .search-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 5;
    display: flex;
    justify-content: center;
    background: rgba(0, 0, 0, 0.7);
    --animation-speed: 0.2s;
}

body .search-container.animate-appear {
    animation: var(--animation-speed) animateAppearSearchContainer forwards;
}

@keyframes animateAppearSearchContainer {
    from {
        background: transparent;
    }
    to {
        background: rgba(0, 0, 0, 0.7);
    }
}

body .search-container.animate-disappear {
    animation: var(--animation-speed) animateAppearSearchContainer reverse forwards;
}

body .search-container::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
}

@media screen and (max-width: 999px) {
    body .search-container::before {
        background: rgb(16, 18, 22);
    }

    body .search-container.animate-appear::before {
        animation: var(--animation-speed) animateAppearLeftTranslate forwards;
    }

    @keyframes animateAppearLeftTranslate {
        from {
            transform: translateX(100%);
        }
        to {
            transform: translateX(0);
        }
    }

    body .search-container.animate-disappear::before {
        animation: var(--animation-speed) animateAppearLeftTranslate reverse forwards;
    }
}

@media screen and (min-width: 1000px) {
    body .search-container::before {
        backdrop-filter: blur(15px);
        -webkit-backdrop-filter: blur(15px);
    }

    body.reduce-blur .search-container::before {
        display: none;
        backdrop-filter: none;
        -webkit-backdrop-filter: none;
    }

    body .search-container.animate-appear::before {
        animation: var(--animation-speed) animateAppearBlur forwards;
    }

    @keyframes animateAppearBlur {
        from {
            opacity: 0;
        }
        to {
            opacity: 1;
        }
    }

    body .search-container.animate-disappear::before {
        animation: var(--animation-speed) animateAppearBlur reverse forwards;
    }
}

body .search-container.faster {
    --animation-speed: 0.1s;
}

body .search-container:not(.animate-appear):not(.animate-disappear) > .search-input.animated {
    display: none;
}

body .search-container .search-input {
    min-height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    border-radius: 10px;
    background: rgb(16, 18, 22);
    border: 1px solid rgb(36, 42, 51);
    padding-inline: 15px;
    box-sizing: border-box;
    position: relative;
}

body .search-container .search-input:not(.animated) {
    margin-top: 10px;
    margin-inline: 10px;
}

body .search-container .search-input > svg:not(.spinner) {
    fill: rgba(255, 255, 255, 0.4);
    min-height: 17px;
    min-width: 17px;
}

body .search-container .search-input > svg.cancel {
    cursor: pointer;
    transition: var(--animation-speed) transform, var(--animation-speed) opacity;
}

body .search-container .search-input .spinner {
    position: absolute;
    top: 50%;
    right: 0;
    transform: translateY(-50%);
    display: flex;
    align-items: center;
    justify-content: center;
    transition: var(--animation-speed) transform, var(--animation-speed) opacity;
}

body .search-container .search-input.animated svg.cancel,
body .search-container.text-is-empty .search-input svg.cancel,
body .search-container .search-input:not(.is-loading) .spinner {
    opacity: 0;
    pointer-events: none;
}

body .search-container .search-input:not(.is-loading) .spinner {
    transform: translateY(-50%) scale(1.2);
}

body .search-container.text-is-empty .search-input.animated svg.cancel,
body .search-container.text-is-empty .search-input svg.cancel {
    transform: scale(1.2);
}

body .search-container .search-input .spinner > svg {
    --scale: 0.4;
    animation: 0.9s rotateSvg linear infinite;
}

body .search-container .search-input .spinner > svg circle {
    fill: none;
    stroke: #FFFFFF;
    stroke-width: 4px;
    stroke-linecap: round;
    stroke-dasharray: 10, 10;
    animation: 1.5s animateStroke linear infinite;
}

body .search-container .search-input:not(.is-loading) .spinner > svg,
body .search-container .search-input:not(.is-loading) .spinner > svg circle {
    animation-play-state: paused;
}

body .search-container .search-input input {
    height: 100%;
    background: transparent;
    border: none;
    font-size: 19px;
    font-family: 'Poppins', sans-serif;
    color: #FFFFFF;
    min-width: 0;
}

body .search-container .search-input input::placeholder {
    font-size: 17px;
    transform:translate3d(0,-1px,0);
}

body .search-container .search-input:not(.animated) input {
    flex: 1;
}

body .search-container .search-input.animated input {
    width: 100%;
}

body .search-container .search-input-container {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 15px;
    margin-top: 10px;
    margin-inline: 20px;
}

@media screen and (min-width: 1000px) {
    body .search-container .search-input-container {
        margin-inline: 10px;
    }
}

body .search-container .search-input-container .search-input {
    flex: 1;
    margin: 0;
    min-width: 0;
}

body .search-container .search-input-container .close {
    color: #FFFFFF;
}

body .search-container .search-input-container .close.animate-appear {
    animation: 0.2s appearSIClose forwards;
}

@keyframes appearSIClose {
    from {
        transform: scale(0.5);
        opacity: 0;
    }
    to {
        transform: scale(1);
        opacity: 1;
    }
}

body .search-container .search-input-container .close.animate-disappear {
    animation: var(--animation-speed) appearSIClose reverse forwards;
}

@media screen and (min-width: 1000px) {
    body .search-container .search-input-container .close {
        display: none;
    }
}

body .search-container.animate-appear > .search-input.animated,
body .search-container.animate-disappear > .search-input.animated {
    position: absolute;
    --start-background: rgb(22, 26, 32);
    --end-background: rgb(16, 18, 22);
    animation: var(--animation-speed) animateAppearSearchInput forwards cubic-bezier(0.42, 0, 0, 0.96);
}

@keyframes animateAppearSearchInput {
    from {
        top: var(--start-y);
        left: var(--start-x);
        width: var(--start-width);
        height: var(--start-height);
        background: var(--start-background);
    }
    to {
        top: var(--end-y);
        left: var(--end-x);
        width: var(--end-width);
        height: var(--end-height);
        background: var(--end-background);
    }
}

body .search-container.animate-disappear > .search-input.animated {
    --start-background: rgb(16, 18, 22);
    --end-background: rgb(22, 26, 32);
}

@media screen and (max-width: 999px) {
    body .search-container.animate-appear > .search-input.animated {
        background: rgb(16, 18, 22);
        width: var(--end-width);
        height: var(--end-height);
        top: var(--end-y);
        left: var(--end-x);
    }

    body .search-container.animate-disappear > .search-input.animated {
        width: var(--start-width);
        height: var(--start-height);
        top: var(--start-y);
        left: var(--start-x);
    }

    body .search-container.animate-appear > .search-input.animated {
        animation: 0.2s animateAppearSearchInputMobile forwards;
    }

    body .search-container.animate-disappear > .search-input.animated {
        animation: 0.2s animateAppearSearchInputMobile reverse forwards;
    }

    @keyframes animateAppearSearchInputMobile {
        from {
            transform: translateX(40px);
            opacity: 0;
        }
        to {
            transform: translateX(0);
            opacity: 1;
        }
    }
}

body .search-container .search-results {
    margin-top: 15px;
    max-height: 80vh;
    height: fit-content;
    width: 60vw;
    position: relative;
    overflow: hidden;
    display: flex;
    flex-direction: column;
}

@media screen and (max-width: 999px) {
    body .search-container .search-results {
        max-height: none;
        height: 100vh;
        margin-top: 0;
        width: 100vw;
    }
}

body .search-container.animate-appear .search-results,
body .search-container.animate-disappear .search-results {
    opacity: 0;
}

body .search-container .search-results::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: calc(100% - 4px);
    height: calc(100% - 4px);
    background: #161a20;
    z-index: -1;
    border-radius: 20px;
    border: 2px solid rgb(36, 42, 51);
    transition: var(--animation-speed) all;
}

@media screen and (max-width: 999px) {
    body .search-container .search-results::before {
        display: none;
    }
}

body .search-container.text-is-empty .search-results::before {
    height: 34px;
    top: 10px;
    left: 10px;
    width: calc(100% - 4px - 20px);
}

body .search-container .search-results .list-adapter {
    flex: 1;
    position: relative;
    padding-top: 10px;
    padding-inline: 10px;
    margin-bottom: 10px;
    overflow-x: hidden;
    overflow-y: auto;
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
    transition: var(--animation-speed) clip-path;
}

@supports (overflow-y: overlay) {
    body .search-container .search-results .list-adapter {
        overflow-y: overlay;
    }
}

@media screen and (min-width: 1000px) {
    body .search-container.text-is-empty .search-results .list-adapter {
        clip-path: polygon(0 0, 99% 0, 100% 0, 0 0);
    }
}

body .search-container .search-results .list-adapter.is-empty {
    display: flex;
    align-items: center;
    justify-content: center;
}

body .search-container .search-results .list-adapter.is-empty .empty-container {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    gap: 10px;
}

@media screen and (min-width: 1000px) {
    body .search-container .search-results .list-adapter.is-empty .empty-container.is-first-open {
        display: none;
    }
}

@media screen and (max-width: 999px) {
    body .search-container .search-results .list-adapter.is-empty .empty-container.is-first-view {
        animation: 0.2s appearSIClose forwards;
    }

    body .search-container .search-results .list-adapter.is-empty .empty-container.animate-disappear {
        animation: var(--animation-speed) appearSIClose reverse forwards;
    }
}

body .search-container .search-results .list-adapter.is-empty .empty-container svg {
    width: 40px;
    height: 40px;
    fill: rgba(255, 255, 255, 0.5);
}

body .search-container .search-results .list-adapter.is-empty .empty-container.is-first-open.is-first-view svg {
    animation: 0.6s rotateForTooltip forwards;
}

body .search-container .search-results .list-adapter.is-empty .empty-container .empty-container-text {
    color: rgba(255, 255, 255, 0.5);
    font-size: 19px;
}

body .search-container .search-results .list-adapter .ref-container.preparing-for-remove {
    padding-bottom: var(--animate-ref);
}

body .search-container .search-results .list-adapter .ref-container.animate-disappear {
    padding-bottom: var(--animate-ref);
    overflow: hidden;
    animation: 0.2s animateDisappear forwards;
}

@keyframes animateDisappear {
    to {
        padding-bottom: 0;
    }
}

body .search-container .search-results .list-adapter .ref-container.animate-disappear-as-opposite {
    height: var(--initial-height);
    overflow: hidden;
    animation: 0.2s animateDisappearAsOpposite forwards;
}

@keyframes animateDisappearAsOpposite {
    to {
        height: 0;
    }
}

body .search-container .search-results .list-adapter .ref-container.animate-appear {
    overflow: hidden;
    animation: 0.2s animateAppear forwards;
}

@keyframes animateAppear {
    from {
        padding-bottom: 0;
    }
    to {
        padding-bottom: var(--animate-ref);
    }
}

body .search-container .search-results .list-adapter .ref-container.animate-appear-as-opposite {
    overflow: hidden;
    animation: 0.2s animateAppearAsOpposite forwards;
}

@keyframes animateAppearAsOpposite {
    from {
        height: 0;
    }
    to {
        height: var(--initial-height);
    }
}

body .search-container .search-results .list-adapter .ref-container .row-title {
    color: rgba(255, 255, 255, 0.5);
    font-size: 14px;
    margin-top: 5px;
    margin-bottom: 5px;
}

body .search-container .search-results .list-adapter .ref-container .row-title:not(:first-child) {
    margin-top: 15px;
}

body .search-container .search-results .list-adapter .ref-container .row-title:has(.show-more) {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

body .search-container .search-results .list-adapter .ref-container .row-title .show-more {
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    position: relative;
}

body .search-container .search-results .list-adapter .ref-container .row-title .show-more span {
    position: absolute;
    top: 50%;
    right: 20px;
    transform: translateY(-50%);
    width: max-content;
    transition: 0.2s opacity, 0.2s transform;
}

body .search-container .search-results .list-adapter .ref-container .row-title .show-more.expanded span.more,
body .search-container .search-results .list-adapter .ref-container .row-title .show-more:not(.expanded) span.less {
    opacity: 0;
}

body .search-container .search-results .list-adapter .ref-container .row-title .show-more.expanded span.more {
    transform: translateY(-80%);
}

body .search-container .search-results .list-adapter .ref-container .row-title .show-more:not(.expanded) span.less {
    transform: translateY(80%);
}

body .search-container .search-results .list-adapter .ref-container .row-title .show-more svg {
    fill: rgba(255, 255, 255, 0.5);
    transition: 0.2s transform;
}

body .search-container .search-results .list-adapter .ref-container .row-title .show-more.expanded svg {
    transform: rotate(180deg);
}

body .search-container .search-results .list-adapter .ref-container .row {
    display: flex;
    justify-content: space-between;
    padding: 8px;
    border-radius: 10px;
    cursor: pointer;
    transition: 0.2s background;
}

body .search-container .search-results .list-adapter .ref-container .row:hover {
    background: rgba(255, 255, 255, 0.05);
}

body .search-container .search-results .list-adapter .ref-container .row:active {
    background: rgba(255, 255, 255, 0.15);
}

body .search-container .search-results .list-adapter .ref-container .row.hidden {
    opacity: 0;
    pointer-events: none;
}

body .search-container .search-results .list-adapter .ref-container .row.animate-appear {
    opacity: 0;
    transform: scale(0.95);
    animation: 0.2s appearRow forwards calc(var(--id) * 0.05s);
}

body .search-container .search-results .list-adapter .ref-container .row.animate-disappear {
    opacity: 1;
    transform: scale(1);
    animation: 0.2s appearRow reverse forwards calc(var(--id) * 0.05s);
}

@keyframes appearRow {
    from {
        opacity: 0;
        transform: scale(0.95);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

body .search-container .search-results .list-adapter .ref-container .row.has-docs-preview {
    padding-bottom: 110px;
    position: relative;
}

body .search-container .search-results .list-adapter .ref-container .row .left-side {
    display: flex;
    justify-content: center;
    gap: 10px;
}

body .search-container .search-results .list-adapter .ref-container .row:not(:last-child) {
    margin-bottom: 5px;
}

body .search-container .search-results .list-adapter .ref-container .row .left-side .code-details .cd-name {
    font-size: 15px;
    color: #FFFFFF;
}

body .search-container .search-results .list-adapter .ref-container .row .left-side .code-details .cd-name .cd-type {
    display: inline;
    font-size: 11px;
    padding: 2px 7px;
    border-radius: 4px;
    font-weight: 600;
    margin-right: 6px;
}

body .search-container .search-results .list-adapter .ref-container .row .left-side .code-details .cd-name .cd-type[data-type="class"] {
    background: rgba(121, 192, 255, 0.1);
    color: rgb(121, 192, 255);
}

body .search-container .search-results .list-adapter .ref-container .row .left-side .code-details .cd-name .cd-type[data-type="method"] {
    background: rgba(210, 168, 255, 0.1);
    color: rgb(210, 168, 255);
}

body .search-container .search-results .list-adapter .ref-container .row .left-side .code-details .cd-name .cd-type[data-type="enum"] {
    background: rgba(255, 166, 87, 0.1);
    color: rgb(255, 166, 87, 1);
}

body .search-container .search-results .list-adapter .ref-container .row .left-side .code-details .cd-path {
    color: rgba(255, 255, 255, 0.6);
    font-size: 13px;
    margin-top: 3px;
}

body .search-container .search-results .list-adapter .ref-container .row > span {
    font-size: 14px;
    color: rgba(255, 255, 255, 0.6);
}

body .search-container .search-results .list-adapter .ref-container .row .page-container {
    height: calc(110px - 20px);
    position: absolute;
    bottom: 10px;
    background: #0e1114;
    width: 90%;
    transform: translateX(5%);
    border-radius: 20px;
    border: 2px dashed #ffffff38;
    pointer-events: none;
    overflow: hidden;
    transition: none !important;
}

body .search-container .search-results .list-adapter .ref-container .row .page-container::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transition: 0.2s transform, 0.2s filter;
}

body .search-container .search-results .list-adapter .ref-container .row .page-container::before {
    background: linear-gradient(90deg, #0e1114 50%, rgba(255, 255, 255, 0.05), #0e1114 75%);
    animation: 1s animateBackground forwards infinite linear;
}

@keyframes animateBackground {
    from {
        opacity: 0;
        background-position: -79vw;
    }
    50% {
        opacity: 1;
        background-position: -58vw;
    }
    to {
        opacity: 0;
        background-position: -34vw;
    }
}

body .search-container .search-results .list-adapter .ref-container .row .page-container:not(.is-loading)::before {
    animation-play-state: paused;
    filter: opacity(0);
}

body .search-container .search-results .list-adapter .ref-container .row .page-container .ids {
    background: rgba(255, 255, 255, 0.2);
    position: relative;
}

body .search-container .search-results .list-adapter .ref-container .row .page-container .page {
    transform: translateY(var(--try, 0)) scale(0.8);
    transform-origin: 0 0;
}